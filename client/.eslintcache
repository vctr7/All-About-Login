[{"/Users/vctr/Desktop/login/client/src/index.js":"1","/Users/vctr/Desktop/login/client/src/App.js":"2","/Users/vctr/Desktop/login/client/src/reportWebVitals.js":"3","/Users/vctr/Desktop/login/client/src/component/Logo.js":"4","/Users/vctr/Desktop/login/client/src/config.js":"5","/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js":"6","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js":"7","/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js":"8","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js":"9","/Users/vctr/Desktop/login/client/src/util/utils.js":"10","/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js":"11","/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js":"12","/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js":"13","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js":"14","/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js":"15","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js":"16","/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js":"17","/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js":"18","/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js":"19","/Users/vctr/Desktop/login/client/src/component/twitch/TwitchLogin.js":"20","/Users/vctr/Desktop/login/client/src/component/twitch/PopupWindow.js":"21","/Users/vctr/Desktop/login/client/src/component/line/LineLogin.js":"22","/Users/vctr/Desktop/login/client/src/component/line/PopupWindow.js":"23","/Users/vctr/Desktop/login/client/src/component/vkontakte/VkontakteLogin.js":"24","/Users/vctr/Desktop/login/client/src/component/vkontakte/PopupWindow.js":"25","/Users/vctr/Desktop/login/client/src/component/dropbox/DropboxLogin.js":"26","/Users/vctr/Desktop/login/client/src/component/dropbox/PopupWindow.js":"27","/Users/vctr/Desktop/login/client/src/component/yahoo/YahooLogin.js":"28","/Users/vctr/Desktop/login/client/src/component/yahoo/PopupWindow.js":"29","/Users/vctr/Desktop/login/client/src/component/slack/SlackLogin.js":"30","/Users/vctr/Desktop/login/client/src/component/slack/PopupWindow.js":"31","/Users/vctr/Desktop/login/client/src/component/reddit/RedditLogin.js":"32","/Users/vctr/Desktop/login/client/src/component/reddit/PopupWindow.js":"33"},{"size":510,"mtime":1611299624413,"results":"34","hashOfConfig":"35"},{"size":9545,"mtime":1611235692369,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610337881361,"results":"37","hashOfConfig":"35"},{"size":16141,"mtime":1611322591144,"results":"38","hashOfConfig":"35"},{"size":1816,"mtime":1611322146866,"results":"39","hashOfConfig":"35"},{"size":4363,"mtime":1611297346897,"results":"40","hashOfConfig":"35"},{"size":1790,"mtime":1611293931940,"results":"41","hashOfConfig":"35"},{"size":4465,"mtime":1611322059339,"results":"42","hashOfConfig":"35"},{"size":1968,"mtime":1611297479271,"results":"43","hashOfConfig":"35"},{"size":552,"mtime":1610799615906,"results":"44","hashOfConfig":"35"},{"size":3510,"mtime":1611293455965,"results":"45","hashOfConfig":"35"},{"size":2880,"mtime":1611297356390,"results":"46","hashOfConfig":"35"},{"size":3695,"mtime":1611293757065,"results":"47","hashOfConfig":"35"},{"size":2744,"mtime":1611310752572,"results":"48","hashOfConfig":"35"},{"size":1862,"mtime":1611281293294,"results":"49","hashOfConfig":"35"},{"size":1673,"mtime":1611322479830,"results":"50","hashOfConfig":"35"},{"size":1959,"mtime":1611322242808,"results":"51","hashOfConfig":"35"},{"size":3985,"mtime":1611242654904,"results":"52","hashOfConfig":"35"},{"size":1640,"mtime":1611240604499,"results":"53","hashOfConfig":"35"},{"size":4346,"mtime":1611242614156,"results":"54","hashOfConfig":"35"},{"size":1641,"mtime":1611237881330,"results":"55","hashOfConfig":"35"},{"size":4651,"mtime":1611298513846,"results":"56","hashOfConfig":"35"},{"size":1852,"mtime":1611297488459,"results":"57","hashOfConfig":"35"},{"size":3888,"mtime":1611317256959,"results":"58","hashOfConfig":"35"},{"size":1843,"mtime":1611314640770,"results":"59","hashOfConfig":"35"},{"size":1675,"mtime":1611320925734,"results":"60","hashOfConfig":"35"},{"size":1852,"mtime":1611317921282,"results":"61","hashOfConfig":"35"},{"size":2184,"mtime":1611314408045,"results":"62","hashOfConfig":"35"},{"size":1631,"mtime":1611310310417,"results":"63","hashOfConfig":"35"},{"size":1540,"mtime":1611322037088,"results":"64","hashOfConfig":"35"},{"size":1843,"mtime":1611321035455,"results":"65","hashOfConfig":"35"},{"size":1727,"mtime":1611322014943,"results":"66","hashOfConfig":"35"},{"size":1843,"mtime":1611321670234,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"mw168y",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vctr/Desktop/login/client/src/index.js",[],["142","143"],"/Users/vctr/Desktop/login/client/src/App.js",[],"/Users/vctr/Desktop/login/client/src/reportWebVitals.js",[],"/Users/vctr/Desktop/login/client/src/component/Logo.js",["144"],"/Users/vctr/Desktop/login/client/src/config.js",[],"/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js",["145"],"import React from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\nimport axios from 'axios';\nimport request from 'request';\nfunction SpotifyLogin({ logo, clientId, clientSecret, redirectUri }) {\n    const onClick = () => {\n        console.log('spotify');\n        const search = toQuery({\n            client_id: clientId,\n            scope: 'user-read-email user-read-private',\n            redirect_uri: redirectUri,\n            response_type: 'code',\n        });\n\n        const popup = PopupWindow.open(\n            'spotify-authorization',\n            `https://accounts.spotify.com/authorize?${search}`\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error(\"'access_token' not found\"));\n        } else {\n            console.log('get access_token');\n            console.log(data);\n            const code = data.code;\n\n            const authOptions = {\n                url: 'https://accounts.spotify.com/api/token',\n                form: {\n                    code: code,\n                    redirect_uri: redirectUri,\n                    grant_type: 'authorization_code',\n                },\n                headers: {\n                    Authorization:\n                        'Basic ' +\n                        Buffer.from(clientId + ':' + clientSecret).toString(\n                            'base64'\n                        ),\n                },\n                json: true,\n            };\n\n            request.post(authOptions, function (error, response, body) {\n                if (!error && response.statusCode === 200) {\n                    const access_token = body.access_token,\n                        refresh_token = body.refresh_token;\n\n                    const options = {\n                        url: 'https://api.spotify.com/v1/me',\n                        headers: { Authorization: 'Bearer ' + access_token },\n                        json: true,\n                    };\n\n                    // use the access token to access the Spotify Web API\n                    request.get(options, function (error, response, body) {\n                        console.log(body);\n                        const username = body.display_name;\n                        const email = body.email;\n                        const id = body.id;\n                        const password = body.id;\n                        axios\n                            .post('/api/auth/register', {\n                                userId: id,\n                                password: password,\n                                userName: username,\n                                emailAddress: email,\n                                signBy: 'Spotify',\n                            })\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    console.log('sign up and sign in');\n                                } else {\n                                    console.log('not error but problem');\n                                }\n                            })\n                            .catch((e) => {\n                                axios\n                                    .post('/api/auth/login', {\n                                        userId: id,\n                                        password: password,\n                                    })\n                                    .then((res) => {\n                                        if (res.status === 200) {\n                                            console.log('sign in');\n                                        } else {\n                                            console.log(\n                                                'not error but problem'\n                                            );\n                                        }\n                                    })\n                                    .catch((e) => console.log(e));\n                            });\n                    });\n                }\n            });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default SpotifyLogin;\n","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js",["146"],"/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/util/utils.js",[],"/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js",["147","148"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport * as config from '../../config';\nconst { naver } = window;\nlet val = false;\n\nconst naverLogin = new naver.LoginWithNaverId({\n    clientId: config.NAVER_ID,\n    callbackUrl: 'https://localhost:3000',\n    callbackHandle: false,\n    loginButton: { color: 'white', type: 1, height: 48 },\n    isPopup: false,\n});\n\nfunction sendData(data) {\n    if (val) {\n        val = false;\n    } else val = true;\n}\nfunction NaverLogin() {\n    useEffect(() => {\n        naverLogin.init();\n        if (val) {\n            val = false;\n            window.addEventListener('load', function () {\n                naverLogin.getLoginStatus(function (status) {\n                    if (status) {\n                        /* 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크 */\n\n                        const data = naverLogin;\n                        if (data == undefined || data == null) {\n                            alert(\n                                '이메일은 필수정보입니다. 정보제공을 동의해주세요.'\n                            );\n                            /* 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함 */\n                            naverLogin.reprompt();\n                            return;\n                        }\n                        const username = data.user.name\n                        const email = data.user.email\n                        const password = data.user.id\n                        const id = password\n                        axios\n                                .post('/api/auth/register', {\n                                    userId: id,\n                                    password: password,\n                                    userName: username,\n                                    emailAddress: email,\n                                    signBy: 'Naver',\n                                })\n                                .then((res) => {\n                                    if (res.status === 200) {\n                                        console.log('sign up and sign in');\n                                    } else {\n                                        console.log('not error but problem');\n                                    }\n                                })\n                                .catch((e) => {\n                                    axios\n                                        .post('/api/auth/login', {\n                                            userId: id,\n                                            password: password,\n                                        })\n                                        .then((res) => {\n                                            if (res.status === 200) {\n                                                console.log('sign in');\n                                            } else {\n                                                console.log(\n                                                    'not error but problem'\n                                                );\n                                            }\n                                        })\n                                        .catch((e) => console.log(e));\n                                });\n\n                        // window.location.replace(\"http://localhost:3000\");\n                    } else {\n                        console.log('callback 처리에 실패하였습니다.');\n                    }\n                });\n            });\n        } else val = true;\n    });\n\n    return <div onClick={()=>alert(\"Asd\")}></div>;\n}\n\nexport default NaverLogin;\n","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js",["149","150"],"/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js",["151"],"import { toParams, toQuery } from '../../util/utils';\n\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n\n        this.window = window.open(url, '_blank');\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setInterval(() => {\n                try {\n                    const popup = this.window;\n\n                    if (!popup || popup.closed !== false) {\n                        this.close();\n\n                        reject(new Error('The popup was closed'));\n\n                        return;\n                    }\n\n                    if (\n                        popup.location.href === this.url ||\n                        popup.location.pathname === 'blank'\n                    ) {\n                        return;\n                    }\n\n                    const params = toParams(\n                        popup.location.search.replace(/^\\?/, '')\n                    );\n\n                    resolve(params);\n\n                    this.close();\n                } catch (error) {\n                    /*\n                     * Ignore DOMException: Blocked a frame with origin from accessing a\n                     * cross-origin frame.\n                     */\n                }\n            }, 500);\n        });\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js",["152"],"/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js",["153","154"],"/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js",["155"],"import { toParams, toQuery } from '../../util/utils'\n\nclass PopupWindow {\n  constructor(url) {\n    this.url = url;\n  }\n\n  open() {\n    const { url } = this;\n\n    this.window = window.open(url);\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  poll() {\n    this.promise = new Promise((resolve, reject) => {\n        this._iid = window.setInterval(() => {\n            try {\n                const popup = this.window;\n\n                if (!popup || popup.closed !== false) {\n                    this.close();\n\n                    reject(new Error('The popup was closed'));\n\n                    return;\n                }\n\n                if (\n                    popup.location.href === this.url ||\n                    popup.location.pathname === 'blank'\n                ) {\n                    return;\n                }\n\n                const params = toParams(\n                    popup.location.search.replace(/^\\?/, '')\n                );\n\n                resolve(params);\n\n                this.close();\n            } catch (error) {\n                /*\n                 * Ignore DOMException: Blocked a frame with origin from accessing a\n                 * cross-origin frame.\n                 */\n            }\n        }, 500);\n    });\n}\n\n  cancel() {\n    if (this._iid) {\n      window.clearInterval(this._iid);\n      this._iid = null;\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n    popup.open()\n    popup.poll();\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/twitch/TwitchLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/twitch/PopupWindow.js",["156"],"import { toParams, toQuery } from '../../util/utils'\n\nclass PopupWindow {\n  constructor(url) {\n    this.url = url;\n  }\n\n  open() {\n    const { url } = this;\n\n    this.window = window.open(url);\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  poll() {\n    this.promise = new Promise((resolve, reject) => {\n        this._iid = window.setInterval(() => {\n            try {\n                const popup = this.window;\n\n                if (!popup || popup.closed !== false) {\n                    this.close();\n\n                    reject(new Error('The popup was closed'));\n\n                    return;\n                }\n\n                if (\n                    popup.location.href === this.url ||\n                    popup.location.pathname === 'blank'\n                ) {\n                    return;\n                }\n\n                const params = toParams(\n                    popup.location.search.replace(/^\\?/, '')\n                );\n\n                resolve(params);\n\n                this.close();\n            } catch (error) {\n                /*\n                 * Ignore DOMException: Blocked a frame with origin from accessing a\n                 * cross-origin frame.\n                 */\n            }\n        }, 1000);\n    });\n}\n\n  cancel() {\n    if (this._iid) {\n      window.clearInterval(this._iid);\n      this._iid = null;\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n    popup.open()\n    popup.poll();\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/line/LineLogin.js",["157","158","159","160"],"import React from 'react';\nimport PopupWindow from './PopupWindow';\nimport axios from 'axios';\nimport url from 'url';\nimport qs from 'qs';\nimport querystring from 'querystring';\nimport jwt from 'jsonwebtoken';\nimport { toQuery } from '../../util/utils';\n\nconst maxAge = 120;\n\nfunction LineLogin({\n    clientId,\n    redirectURI,\n    logo,\n    state,\n    nonce,\n    clientSecret,\n    setPayload,\n    setIdToken,\n}) {\n    const onClick = () => {\n        const search = toQuery({\n            response_type: 'code',\n            client_id: clientId,\n            redirect_uri: redirectURI,\n            state: '12345abcde',\n            scope: 'profile%20openid%20email',\n            prompt: 'consent',\n            max_age: maxAge,\n        });\n\n        const popup = PopupWindow.open(\n            `https://access.line.me/oauth2/v2.1/authorize?${search}`\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('code not found'));\n        } else {\n            console.log('get code');\n            console.log(data);\n            const code = data.code;\n\n            const reqBody = {\n                grant_type: 'authorization_code',\n                code: code,\n                redirect_uri: redirectURI,\n                client_id: clientId,\n                client_secret: clientSecret,\n            };\n            const reqConfig = {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n            };\n\n            axios\n                .post(\n                    'https://api.line.me/oauth2/v2.1/token',\n                    qs.stringify(reqBody),\n                    reqConfig\n                )\n                .then((res) => {\n                    const access_token = res.data.access_token;\n\n                    axios\n                        .get('https://api.line.me/v2/profile', {\n                            headers: {\n                                Authorization: 'Bearer ' + access_token,\n                            },\n                        })\n                        .then((d) => {\n                            const username = d.data.displayName;\n                            const email = 'no email';\n                            const id = d.data.userId;\n                            const password = id;\n                            axios\n                                .post('/api/auth/register', {\n                                    userId: id,\n                                    password: password,\n                                    userName: username,\n                                    emailAddress: email,\n                                    signBy: 'Line',\n                                })\n                                .then((res) => {\n                                    if (res.status === 200) {\n                                        console.log('sign up and sign in');\n                                    } else {\n                                        console.log('not error but problem');\n                                    }\n                                })\n                                .catch((e) => {\n                                    axios\n                                        .post('/api/auth/login', {\n                                            userId: id,\n                                            password: password,\n                                        })\n                                        .then((res) => {\n                                            if (res.status === 200) {\n                                                console.log('sign in');\n                                            } else {\n                                                console.log(\n                                                    'not error but problem'\n                                                );\n                                            }\n                                        })\n                                        .catch((e) => console.log(e));\n                                });\n                        });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return (\n        <img src={logo} onClick={onClick} className=\"Image\" />\n        // <div className={styles.App}>\n        //     <div onClick={() => lineLogin()} className={styles.lineButton} />\n        // </div>\n    );\n}\nexport default LineLogin;\n","/Users/vctr/Desktop/login/client/src/component/line/PopupWindow.js",["161"],"import { toParams, toQuery } from '../../util/utils';\n\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n\n        this.window = window.open(url);\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setInterval(() => {\n                try {\n                    const popup = this.window;\n\n                    if (!popup || popup.closed !== false) {\n                        this.close();\n\n                        reject(new Error('The popup was closed'));\n\n                        return;\n                    }\n\n                    if (\n                        popup.location.href === this.url ||\n                        popup.location.pathname === 'blank'\n                    ) {\n                        return;\n                    }\n\n                    const params = toParams(\n                        popup.location.search.replace(/^\\?/, '')\n                    );\n\n                    resolve(params);\n\n                    this.close();\n                } catch (error) {\n                    /*\n                     * Ignore DOMException: Blocked a frame with origin from accessing a\n                     * cross-origin frame.\n                     */\n                }\n            }, 500);\n        });\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/vkontakte/VkontakteLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/vkontakte/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/dropbox/DropboxLogin.js",["162"],"/Users/vctr/Desktop/login/client/src/component/dropbox/PopupWindow.js",["163"],"/Users/vctr/Desktop/login/client/src/component/yahoo/YahooLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/yahoo/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/slack/SlackLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/slack/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/reddit/RedditLogin.js",["164"],"/Users/vctr/Desktop/login/client/src/component/reddit/PopupWindow.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":44,"column":10,"nodeType":"171","messageId":"172","endLine":44,"endColumn":13},{"ruleId":"169","severity":1,"message":"173","line":55,"column":25,"nodeType":"171","messageId":"172","endLine":55,"endColumn":38},{"ruleId":"169","severity":1,"message":"174","line":8,"column":15,"nodeType":"171","messageId":"172","endLine":8,"endColumn":21},{"ruleId":"169","severity":1,"message":"175","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":31,"column":34,"nodeType":"178","messageId":"179","endLine":31,"endColumn":36},{"ruleId":"169","severity":1,"message":"180","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},{"ruleId":"169","severity":1,"message":"181","line":44,"column":19,"nodeType":"171","messageId":"172","endLine":44,"endColumn":20},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"183","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":14},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"184","line":2,"column":5,"nodeType":"171","messageId":"172","endLine":2,"endColumn":10},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"185","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":11},{"ruleId":"169","severity":1,"message":"186","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":19},{"ruleId":"169","severity":1,"message":"187","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":11},{"ruleId":"188","severity":1,"message":"189","line":129,"column":9,"nodeType":"190","endLine":129,"endColumn":63},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"180","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},{"ruleId":"169","severity":1,"message":"182","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":27},{"ruleId":"169","severity":1,"message":"180","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'red' is defined but never used.","Identifier","unusedVar","'refresh_token' is assigned a value but never used.","'search' is assigned a value but never used.","'sendData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'d' is assigned a value but never used.","'toQuery' is defined but never used.","'head' is defined but never used.","'check' is assigned a value but never used.","'url' is defined but never used.","'querystring' is defined but never used.","'jwt' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]