[{"/Users/vctr/Desktop/login/client/src/index.js":"1","/Users/vctr/Desktop/login/client/src/App.js":"2","/Users/vctr/Desktop/login/client/src/reportWebVitals.js":"3","/Users/vctr/Desktop/login/client/src/component/Logo.js":"4","/Users/vctr/Desktop/login/client/src/config.js":"5","/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js":"6","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js":"7","/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js":"8","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js":"9","/Users/vctr/Desktop/login/client/src/util/utils.js":"10","/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js":"11","/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js":"12","/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js":"13","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js":"14","/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js":"15","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js":"16","/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js":"17","/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js":"18","/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js":"19"},{"size":500,"mtime":1610972835602,"results":"20","hashOfConfig":"21"},{"size":9458,"mtime":1610867396688,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1610337881361,"results":"23","hashOfConfig":"21"},{"size":8047,"mtime":1611061624807,"results":"24","hashOfConfig":"21"},{"size":686,"mtime":1611061607686,"results":"25","hashOfConfig":"21"},{"size":1254,"mtime":1610876300021,"results":"26","hashOfConfig":"21"},{"size":1590,"mtime":1610850453234,"results":"27","hashOfConfig":"21"},{"size":1210,"mtime":1610876216318,"results":"28","hashOfConfig":"21"},{"size":1466,"mtime":1610876153776,"results":"29","hashOfConfig":"21"},{"size":552,"mtime":1610799615906,"results":"30","hashOfConfig":"21"},{"size":1866,"mtime":1610938965091,"results":"31","hashOfConfig":"21"},{"size":1697,"mtime":1610961491994,"results":"32","hashOfConfig":"21"},{"size":2344,"mtime":1610978190843,"results":"33","hashOfConfig":"21"},{"size":1590,"mtime":1611020491171,"results":"34","hashOfConfig":"21"},{"size":1660,"mtime":1611020002749,"results":"35","hashOfConfig":"21"},{"size":1148,"mtime":1611031080268,"results":"36","hashOfConfig":"21"},{"size":2021,"mtime":1611028213161,"results":"37","hashOfConfig":"21"},{"size":1268,"mtime":1611062494620,"results":"38","hashOfConfig":"21"},{"size":1365,"mtime":1611061143854,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"mw168y",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vctr/Desktop/login/client/src/index.js",[],["86","87"],"/Users/vctr/Desktop/login/client/src/App.js",[],"/Users/vctr/Desktop/login/client/src/reportWebVitals.js",[],"/Users/vctr/Desktop/login/client/src/component/Logo.js",["88","89","90"],"/Users/vctr/Desktop/login/client/src/config.js",[],"/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js",["91"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\n\n\nfunction SpotifyLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user-read-private');\n\n    useEffect(() => {\n        setScope(scope);\n    });\n\n    const onClick = () => {\n        console.log('spotify');\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/spotify\",\n            response_type: 'code',\n        });\n\n        const popup = PopupWindow.open(\n            'spotify-authorization',\n            `https://accounts.spotify.com/authorize?${search}`,\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n\n    const onSuccess = (data) => {\n        if (!data.access_token) {\n            onFailure(new Error(\"'access_token' not found\"));\n        } else {\n            console.log('get access_token');\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default SpotifyLogin;\n","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js",["92","93"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils'\n\nfunction GithubLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/github\",\n        });\n        const popup = PopupWindow.open(\n            'github-oauth-authorize',\n            `https://github.com/login/oauth/authorize?client_id=${clientId}`,\n            { height: 1000, width: 600 }\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default GithubLogin;\n","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/util/utils.js",[],"/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js",["94"],"import React from 'react';\nimport axios from 'axios';\nimport * as config from '../../config';\n\nconst { Kakao } = window;\nfunction KakaonLogin({ logo, clientId, redirectUri }) {\n\n    const onClick = () => {\n        try {\n            // Kakao.Auth.authorize({\n            //     redirectUri: redirectUri + '/kakao',\n            // });\n            Kakao.Auth.login({\n                scope: 'account_email',\n                success:  (data) => {\n                    console.log(data);\n                    Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            console.log(response);\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        }\n                    });\n                    axios\n                        .post('/api/callback/kakao', { data: data })\n                        .then((res) => {\n                            if (res.status === 200) {\n                                console.log('success');\n                            } else {\n                                console.log('not error but problem');\n                            }\n                        })\n                        .catch((e) => {\n                            console.log(e);\n                        });\n                },\n                fail: function (error) {\n                    console.log(error);\n                },\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default KakaonLogin;\n","/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js",["95","96"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport * as config from '../../config';\nconst { naver } = window;\nlet val = false;\n\nconst naverLogin = new naver.LoginWithNaverId({\n    clientId: config.NAVER_ID,\n    callbackUrl: 'http://localhost:3000',\n    callbackHandle: false,\n    loginButton: { color: 'white', type: 1, height: 48 },\n    isPopup: false,\n});\n\nfunction sendData(data) {\n    if (val) {\n        val = false;\n    } else val = true;\n}\nfunction NaverLogin({ clientId, redirectUri }) {\n    useEffect(() => {\n        naverLogin.init();\n        if (val) {\n            val = false;\n            window.addEventListener('load', function () {\n                naverLogin.getLoginStatus(function (status) {\n                    if (status) {\n                        /* 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크 */\n\n                        const data = naverLogin;\n                        if (data == undefined || data == null) {\n                            alert(\n                                '이메일은 필수정보입니다. 정보제공을 동의해주세요.'\n                            );\n                            /* 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함 */\n                            naverLogin.reprompt();\n                            return;\n                        }\n                        axios\n                            .post('/api/callback/naver', { data: data })\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    console.log('success');\n                                } else {\n                                    console.log('not error but problem');\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                            });\n                        // window.location.replace(\"http://localhost:3000\");\n                    } else {\n                        console.log('callback 처리에 실패하였습니다.');\n                    }\n                });\n            });\n        } else val = true;\n    });\n\n    return <div onClick={()=>alert(\"Asd\")}></div>;\n}\n\nexport default NaverLogin;\n","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js",["97"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\nimport axios from 'axios';\n\nfunction MicrosoftLogin({ logo, clientId }) {\n    const [scope, setScope] = useState('user.read');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            redirect_uri: 'http://localhost:3000',\n            scope: scope,\n            response_type: 'token',\n        });\n        const popup = PopupWindow.open(\n            `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?${search}`\n        );\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('code not found'));\n        } else {\n            // console.log(data);\n            axios\n                .post('/api/callback/microsoft', { data: data })\n                .then((res) => {\n                    if (res.status === 200) {\n                        console.log('success');\n                    } else {\n                        console.log('not error but problem');\n                    }\n                })\n                .catch((e) => {\n                    console.log(e);\n                });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default MicrosoftLogin;\n","/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js",["98"],"import { toParams, toQuery } from '../../util/utils';\n\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n\n        this.window = window.open(url, '_blank');\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setTimeout(() => {\n                try {\n                    const popup = this.window;\n\n                    if (!popup || popup.closed !== false) {\n                        reject(new Error('The popup was closed'));\n                        this.close();\n\n                        return;\n                    }\n\n                    if (\n                        popup.location.href === this.url ||\n                        popup.location.pathname === 'blank'\n                    ) {\n                        return;\n                    }\n\n                    const params = toParams(\n                        popup.location.hash.replace(/^#/, '')\n                    );\n                    resolve(params);\n                    this.close();\n                } catch (error) {}\n            }, 1000);\n        });\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js",["99"],"/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js",["100","101","102","103"],"import { toParams, toQuery } from '../../util/utils';\nlet check = false;\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n        this.window = window.open(url);\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setInterval(() => {\n                try {\n                    const popup = this.window;\n\n                    // if (!popup || popup.closed !== false) {\n                    //     reject(new Error('The popup was closed'));\n                    //     this.close();\n\n                    //     return;\n                    // }\n\n                    // if (\n                    //     popup.location.href === this.url ||\n                    //     popup.location.pathname === 'blank'\n                    // ) {\n                    //     return;\n                    // }\n                    // console.log(popup.location)\n                    // const params = toParams(\n                    //     popup.location.hash.replace(/^#/, '')\n                    // );\n                    check = true\n                    resolve();\n                    \n                    \n                } catch (error) {}\n            }, 1000);\n        })\n        // this.close();\n        // setInterval(()=>{if(check) this.close() },1000)\n        // setInterval(()=>console.log(check),1000)\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        // setInterval(() => {\n        //     if(check) this.close();\n        // },1000); \n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js",["104"],"/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"114","line":50,"column":12,"nodeType":"112","messageId":"113","endLine":50,"endColumn":17},{"ruleId":"110","severity":1,"message":"115","line":50,"column":19,"nodeType":"112","messageId":"113","endLine":50,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":9,"column":5,"nodeType":"112","endLine":9,"endColumn":14,"suggestions":"118"},{"ruleId":"116","severity":1,"message":"119","line":10,"column":8,"nodeType":"120","endLine":10,"endColumn":10,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":13,"column":15,"nodeType":"112","messageId":"113","endLine":13,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":3,"column":13,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"110","severity":1,"message":"124","line":15,"column":10,"nodeType":"112","messageId":"113","endLine":15,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":31,"column":34,"nodeType":"127","messageId":"128","endLine":31,"endColumn":36},{"ruleId":"116","severity":1,"message":"119","line":11,"column":8,"nodeType":"120","endLine":11,"endColumn":10,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"130","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":27},{"ruleId":"116","severity":1,"message":"119","line":10,"column":8,"nodeType":"120","endLine":10,"endColumn":10,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"132","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"110","severity":1,"message":"130","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":27},{"ruleId":"110","severity":1,"message":"133","line":22,"column":27,"nodeType":"112","messageId":"113","endLine":22,"endColumn":32},{"ruleId":"110","severity":1,"message":"134","line":41,"column":21,"nodeType":"112","messageId":"113","endLine":41,"endColumn":26},{"ruleId":"116","severity":1,"message":"119","line":10,"column":8,"nodeType":"120","endLine":10,"endColumn":10,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"130","line":1,"column":20,"nodeType":"112","messageId":"113","endLine":1,"endColumn":27},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setScope'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scope] as a second argument to the useEffect Hook.",["138"],"React Hook useEffect has a missing dependency: 'scope'. Either include it or remove the dependency array. You can also do a functional update 'setScope(s => ...)' if you only need 'scope' in the 'setScope' call.","ArrayExpression",["139"],"'search' is assigned a value but never used.","'config' is defined but never used.","'sendData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["140"],"'toQuery' is defined but never used.",["141"],"'toParams' is defined but never used.","'popup' is assigned a value but never used.","'check' is assigned a value but never used.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"145","fix":"148"},{"desc":"145","fix":"149"},"Add dependencies array: [scope]",{"range":"150","text":"151"},"Update the dependencies array to be: [scope]",{"range":"152","text":"153"},{"range":"154","text":"153"},{"range":"155","text":"153"},{"range":"156","text":"153"},[310,310],", [scope]",[296,298],"[scope]",[319,321],[326,328],[324,326]]