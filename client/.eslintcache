[{"/Users/vctr/Desktop/login/client/src/index.js":"1","/Users/vctr/Desktop/login/client/src/App.js":"2","/Users/vctr/Desktop/login/client/src/reportWebVitals.js":"3","/Users/vctr/Desktop/login/client/src/component/Logo.js":"4","/Users/vctr/Desktop/login/client/src/config.js":"5","/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js":"6","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js":"7","/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js":"8","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js":"9","/Users/vctr/Desktop/login/client/src/util/utils.js":"10","/Users/vctr/Desktop/login/client/src/component/google/GoogleLogin.js":"11","/Users/vctr/Desktop/login/client/src/component/google/PopupWindow.js":"12"},{"size":500,"mtime":1610337881360,"results":"13","hashOfConfig":"14"},{"size":9460,"mtime":1610799631467,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610337881361,"results":"16","hashOfConfig":"14"},{"size":11371,"mtime":1610805925081,"results":"17","hashOfConfig":"14"},{"size":473,"mtime":1610778048397,"results":"18","hashOfConfig":"14"},{"size":2167,"mtime":1610799594856,"results":"19","hashOfConfig":"14"},{"size":1531,"mtime":1610794763298,"results":"20","hashOfConfig":"14"},{"size":2403,"mtime":1610795249354,"results":"21","hashOfConfig":"14"},{"size":1571,"mtime":1610794685035,"results":"22","hashOfConfig":"14"},{"size":552,"mtime":1610799615906,"results":"23","hashOfConfig":"14"},{"size":2107,"mtime":1610796695991,"results":"24","hashOfConfig":"14"},{"size":1531,"mtime":1610794763298,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"mw168y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/vctr/Desktop/login/client/src/index.js",[],["55","56"],"/Users/vctr/Desktop/login/client/src/App.js",[],"/Users/vctr/Desktop/login/client/src/reportWebVitals.js",[],"/Users/vctr/Desktop/login/client/src/component/Logo.js",["57","58","59","60","61"],"/Users/vctr/Desktop/login/client/src/config.js",[],"/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js",["62","63","64"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\n\n\n\n\nfunction SpotifyLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user-read-private');\n    const [hasToken, setHasToken] = useState(false);\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    useEffect(() => {\n        setScope(scope);\n    });\n\n    const onClick = () => {\n        if (hasToken) {\n        } else {\n        }\n        console.log('spotify');\n\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/spotify\",\n            response_type: 'code',\n        });\n        // axios.get('/spotifyoauth').then((res) => console.log(res)).catch(err => console.log(err));\n        const popup = PopupWindow.open(\n            'spotify-authorization',\n            `https://accounts.spotify.com/authorize?${search}`,\n            { height: 1000, width: 600 }\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n\n    const onSuccess = (data) => {\n        if (!data.access_token) {\n            onFailure(new Error(\"'access_token' not found\"));\n        } else {\n            console.log('get access_token');\n            console.log(data);\n        //     setHasToken(true);\n        //     axios({\n        //         url: 'https://api.spotify.com/v1/me',\n        //         method: 'get',\n        //         headers: {\n        //             Authorization: 'Bearer ' + String(data.access_token),\n        //         },\n        //     })\n        //         .then((res) => {\n        //             console.log('Fetch Data by access_token Completed');\n        //             console.log(res);\n        //         })\n        //         .catch((err) =>\n        //             console.error('Fetch Data by access_token Fail', err)\n        //         );\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default SpotifyLogin;\n","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js",["65","66","67","68"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils'\n\nfunction GithubLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user');\n    const [hasToken, setHasToken] = useState(false);\n\n    useEffect(() => {\n        setScope(scope);\n    });\n\n    const onClick = () => {\n        // if (hasToken) {\n        // } else {\n        // }\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/github\",\n        });\n        const popup = PopupWindow.open(\n            'github-oauth-authorize',\n            `https://github.com/login/oauth/authorize?client_id=${clientId}`,\n            { height: 1000, width: 600 }\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n            // setHasToken(true);\n            // const response = await axios.post(\n            //     'https://github.com/login/oauth/access_token',\n            //     {\n            //       code,\n            //       client_id, // 내 APP의 정보\n            //       client_secret, // 내 APP의 정보\n            //     },\n            //     {\n            //       headers: {\n            //         accept: 'application/json',\n            //       },\n            //     },\n            //   );\n            // axios({\n            //     url: 'https://github.com/login/oauth/access_token',\n            //     method: 'get',\n            //     headers: {\n            //         Authorization: 'Bearer ' + String(data.access_token),\n            //     },\n            // })\n            //     .then((res) => {\n            //         console.log('Fetch Data by access_token Completed');\n            //         console.log(res);\n            //     })\n            //     .catch((err) =>\n            //         console.error('Fetch Data by access_token Fail', err)\n            //     );\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default GithubLogin;\n","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js",["69"],"import { toParams, toQuery } from '../../util/utils'\n\nclass PopupWindow {\n  constructor(id, url, options = {}) {\n    this.id = id;\n    this.url = url;\n    this.options = options;\n  }\n\n  open() {\n    const { url, id, options } = this;\n\n    this.window = window.open(url, id, toQuery(options, ','));\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  poll() {\n    this.promise = new Promise((resolve, reject) => {\n      this._iid = window.setInterval(() => {\n        try {\n          const popup = this.window;\n          \n          if (!popup || popup.closed !== false) {\n            reject(new Error('The popup was closed'));\n            this.close();\n            \n            return;\n          }\n\n          if (popup.location.href === this.url || popup.location.pathname === 'blank') {\n            return;\n          }\n\n          const params = toParams(popup.location.hash.replace(/^#/, ''));\n          resolve(params);\n          this.close();    \n        } catch (error) {\n          /*\n           * Ignore DOMException: Blocked a frame with origin from accessing a\n           * cross-origin frame.\n           */\n        }\n      }, 1000);\n      \n    });\n  }\n\n  cancel() {\n    if (this._iid) {\n      window.clearInterval(this._iid);\n      this._iid = null;\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n    let val;\n    popup.open()\n    popup.poll();\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/util/utils.js",[],"/Users/vctr/Desktop/login/client/src/component/google/GoogleLogin.js",["70","71","72"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\nimport axios from 'axios';\n\n\n\nfunction GoogleLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user-read-private');\n    const [hasToken, setHasToken] = useState(false);\n\n    useEffect(() => {\n        setScope(scope);\n    });\n\n    const onClick = () => {\n        if (hasToken) {\n        } else {\n        }\n        console.log('google');\n\n        const search = toQuery({\n            client_id: clientId,\n            redirect_uri: redirectUri + \"/google\",\n            response_type: 'token',\n            scope: \"https://www.googleapis.com/auth/contacts.readonly\",\n        });\n        console.log(`https://accounts.google.com/o/oauth2/v2/auth?${search}`)\n        const popup = PopupWindow.open(\n            `https://accounts.google.com/o/oauth2/v2/auth?${search}`,\n            { height: 1000, width: 600 }\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error(\"'access_token' not found\"));\n        } else {\n            console.log('get data');\n            console.log(data);\n            // setHasToken(true);\n            // axios({\n            //     url: 'https://api.spotify.com/v1/me',\n            //     method: 'get',\n            //     headers: {\n            //         Authorization: 'Bearer ' + String(data.access_token),\n            //     },\n            // })\n            //     .then((res) => {\n            //         console.log('Fetch Data by access_token Completed');\n            //         console.log(res);\n            //     })\n            //     .catch((err) =>\n            //         console.error('Fetch Data by access_token Fail', err)\n            //     );\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default GoogleLogin;\n","/Users/vctr/Desktop/login/client/src/component/google/PopupWindow.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"81","line":36,"column":12,"nodeType":"79","messageId":"80","endLine":36,"endColumn":19},{"ruleId":"77","severity":1,"message":"82","line":59,"column":11,"nodeType":"79","messageId":"80","endLine":59,"endColumn":25},{"ruleId":"77","severity":1,"message":"83","line":80,"column":11,"nodeType":"79","messageId":"80","endLine":80,"endColumn":26},{"ruleId":"77","severity":1,"message":"84","line":94,"column":11,"nodeType":"79","messageId":"80","endLine":94,"endColumn":22},{"ruleId":"77","severity":1,"message":"85","line":10,"column":22,"nodeType":"79","messageId":"80","endLine":10,"endColumn":33},{"ruleId":"77","severity":1,"message":"86","line":11,"column":11,"nodeType":"79","messageId":"80","endLine":11,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":12,"column":5,"nodeType":"79","endLine":12,"endColumn":14,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"90","line":7,"column":12,"nodeType":"79","messageId":"80","endLine":7,"endColumn":20},{"ruleId":"77","severity":1,"message":"85","line":7,"column":22,"nodeType":"79","messageId":"80","endLine":7,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":9,"column":5,"nodeType":"79","endLine":9,"endColumn":14,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"92","line":17,"column":15,"nodeType":"79","messageId":"80","endLine":17,"endColumn":21},{"ruleId":"77","severity":1,"message":"93","line":69,"column":9,"nodeType":"79","messageId":"80","endLine":69,"endColumn":12},{"ruleId":"77","severity":1,"message":"94","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"85","line":10,"column":22,"nodeType":"79","messageId":"80","endLine":10,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":12,"column":5,"nodeType":"79","endLine":12,"endColumn":14,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isLogin' is assigned a value but never used.","'loginWithKakao' is assigned a value but never used.","'logoutWithKakao' is assigned a value but never used.","'authHandler' is assigned a value but never used.","'setHasToken' is assigned a value but never used.","'proxyurl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setScope'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scope] as a second argument to the useEffect Hook.",["98"],"'hasToken' is assigned a value but never used.",["99"],"'search' is assigned a value but never used.","'val' is defined but never used.","'axios' is defined but never used.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},{"desc":"101","fix":"104"},"Add dependencies array: [scope]",{"range":"105","text":"106"},{"range":"107","text":"106"},{"range":"108","text":"106"},[425,425],", [scope]",[347,347],[390,390]]