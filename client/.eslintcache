[{"/Users/vctr/Desktop/login/client/src/index.js":"1","/Users/vctr/Desktop/login/client/src/App.js":"2","/Users/vctr/Desktop/login/client/src/reportWebVitals.js":"3","/Users/vctr/Desktop/login/client/src/component/Logo.js":"4","/Users/vctr/Desktop/login/client/src/config.js":"5","/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js":"6","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js":"7","/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js":"8","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js":"9","/Users/vctr/Desktop/login/client/src/util/utils.js":"10","/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js":"11","/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js":"12","/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js":"13","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js":"14","/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js":"15","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js":"16","/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js":"17","/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js":"18","/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js":"19","/Users/vctr/Desktop/login/client/src/component/twitch/TwitchLogin.js":"20","/Users/vctr/Desktop/login/client/src/component/twitch/PopupWindow.js":"21","/Users/vctr/Desktop/login/client/src/component/line/LineLogin.js":"22","/Users/vctr/Desktop/login/client/src/component/line/PopupWindow.js":"23","/Users/vctr/Desktop/login/client/src/component/vkontakte/VkontakteLogin.js":"24","/Users/vctr/Desktop/login/client/src/component/vkontakte/PopupWindow.js":"25","/Users/vctr/Desktop/login/client/src/component/dropbox/DropboxLogin.js":"26","/Users/vctr/Desktop/login/client/src/component/dropbox/PopupWindow.js":"27","/Users/vctr/Desktop/login/client/src/component/yahoo/YahooLogin.js":"28","/Users/vctr/Desktop/login/client/src/component/yahoo/PopupWindow.js":"29","/Users/vctr/Desktop/login/client/src/component/slack/SlackLogin.js":"30","/Users/vctr/Desktop/login/client/src/component/slack/PopupWindow.js":"31","/Users/vctr/Desktop/login/client/src/component/reddit/RedditLogin.js":"32","/Users/vctr/Desktop/login/client/src/component/reddit/PopupWindow.js":"33"},{"size":500,"mtime":1610972835602,"results":"34","hashOfConfig":"35"},{"size":9458,"mtime":1610867396688,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610337881361,"results":"37","hashOfConfig":"35"},{"size":9568,"mtime":1611207438786,"results":"38","hashOfConfig":"35"},{"size":1260,"mtime":1611206820538,"results":"39","hashOfConfig":"35"},{"size":1254,"mtime":1610876300021,"results":"40","hashOfConfig":"35"},{"size":1593,"mtime":1611112814002,"results":"41","hashOfConfig":"35"},{"size":1210,"mtime":1610876216318,"results":"42","hashOfConfig":"35"},{"size":1469,"mtime":1611106599022,"results":"43","hashOfConfig":"35"},{"size":552,"mtime":1610799615906,"results":"44","hashOfConfig":"35"},{"size":1843,"mtime":1611104284696,"results":"45","hashOfConfig":"35"},{"size":1697,"mtime":1610961491994,"results":"46","hashOfConfig":"35"},{"size":2345,"mtime":1611105020689,"results":"47","hashOfConfig":"35"},{"size":1591,"mtime":1611104949108,"results":"48","hashOfConfig":"35"},{"size":1660,"mtime":1611020002749,"results":"49","hashOfConfig":"35"},{"size":1148,"mtime":1611031080268,"results":"50","hashOfConfig":"35"},{"size":2021,"mtime":1611028213161,"results":"51","hashOfConfig":"35"},{"size":1268,"mtime":1611062494620,"results":"52","hashOfConfig":"35"},{"size":1365,"mtime":1611061143854,"results":"53","hashOfConfig":"35"},{"size":1637,"mtime":1611069477144,"results":"54","hashOfConfig":"35"},{"size":1313,"mtime":1611069424510,"results":"55","hashOfConfig":"35"},{"size":4594,"mtime":1611112490073,"results":"56","hashOfConfig":"35"},{"size":1313,"mtime":1611069424510,"results":"57","hashOfConfig":"35"},{"size":1225,"mtime":1611200879130,"results":"58","hashOfConfig":"35"},{"size":1365,"mtime":1611201003536,"results":"59","hashOfConfig":"35"},{"size":1225,"mtime":1611201677998,"results":"60","hashOfConfig":"35"},{"size":1365,"mtime":1611201003536,"results":"61","hashOfConfig":"35"},{"size":1233,"mtime":1611202300421,"results":"62","hashOfConfig":"35"},{"size":1365,"mtime":1611201003536,"results":"63","hashOfConfig":"35"},{"size":1112,"mtime":1611207293769,"results":"64","hashOfConfig":"35"},{"size":1365,"mtime":1611201003536,"results":"65","hashOfConfig":"35"},{"size":1327,"mtime":1611206969869,"results":"66","hashOfConfig":"35"},{"size":1365,"mtime":1611201003536,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"mw168y",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vctr/Desktop/login/client/src/index.js",[],["148","149"],"/Users/vctr/Desktop/login/client/src/App.js",[],"/Users/vctr/Desktop/login/client/src/reportWebVitals.js",[],"/Users/vctr/Desktop/login/client/src/component/Logo.js",[],"/Users/vctr/Desktop/login/client/src/config.js",[],"/Users/vctr/Desktop/login/client/src/component/spotify/SpotifyLogin.js",["150"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\n\n\nfunction SpotifyLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user-read-private');\n\n    useEffect(() => {\n        setScope(scope);\n    });\n\n    const onClick = () => {\n        console.log('spotify');\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/spotify\",\n            response_type: 'code',\n        });\n\n        const popup = PopupWindow.open(\n            'spotify-authorization',\n            `https://accounts.spotify.com/authorize?${search}`,\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n\n    const onSuccess = (data) => {\n        if (!data.access_token) {\n            onFailure(new Error(\"'access_token' not found\"));\n        } else {\n            console.log('get access_token');\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default SpotifyLogin;\n","/Users/vctr/Desktop/login/client/src/component/spotify/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/component/github/GithubLogin.js",["151","152"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils'\n\nfunction GithubLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            scope,\n            redirect_uri: redirectUri + \"/github\",\n        });\n        const popup = PopupWindow.open(\n            'github-oauth-authorize',\n            `https://github.com/login/oauth/authorize?client_id=${clientId}`,\n            { height: 1000, width: 600 }\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default GithubLogin;\n","/Users/vctr/Desktop/login/client/src/component/github/PopupWindow.js",[],"/Users/vctr/Desktop/login/client/src/util/utils.js",[],"/Users/vctr/Desktop/login/client/src/component/amazon/AmazonLogin.js",[],"/Users/vctr/Desktop/login/client/src/component/kakao/KakaoLogin.js",["153"],"import React from 'react';\nimport axios from 'axios';\nimport * as config from '../../config';\n\nconst { Kakao } = window;\nfunction KakaonLogin({ logo, clientId, redirectUri }) {\n\n    const onClick = () => {\n        try {\n            // Kakao.Auth.authorize({\n            //     redirectUri: redirectUri + '/kakao',\n            // });\n            Kakao.Auth.login({\n                scope: 'account_email',\n                success:  (data) => {\n                    console.log(data);\n                    Kakao.API.request({\n                        url: '/v2/user/me',\n                        success: function(response) {\n                            console.log(response);\n                        },\n                        fail: function(error) {\n                            console.log(error);\n                        }\n                    });\n                    axios\n                        .post('/api/callback/kakao', { data: data })\n                        .then((res) => {\n                            if (res.status === 200) {\n                                console.log('success');\n                            } else {\n                                console.log('not error but problem');\n                            }\n                        })\n                        .catch((e) => {\n                            console.log(e);\n                        });\n                },\n                fail: function (error) {\n                    console.log(error);\n                },\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default KakaonLogin;\n","/Users/vctr/Desktop/login/client/src/component/naver/NaverLogin.js",["154","155"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport * as config from '../../config';\nconst { naver } = window;\nlet val = false;\n\nconst naverLogin = new naver.LoginWithNaverId({\n    clientId: config.NAVER_ID,\n    callbackUrl: 'https://localhost:3000',\n    callbackHandle: false,\n    loginButton: { color: 'white', type: 1, height: 48 },\n    isPopup: false,\n});\n\nfunction sendData(data) {\n    if (val) {\n        val = false;\n    } else val = true;\n}\nfunction NaverLogin({ clientId, redirectUri }) {\n    useEffect(() => {\n        naverLogin.init();\n        if (val) {\n            val = false;\n            window.addEventListener('load', function () {\n                naverLogin.getLoginStatus(function (status) {\n                    if (status) {\n                        /* 필수적으로 받아야하는 프로필 정보가 있다면 callback처리 시점에 체크 */\n\n                        const data = naverLogin;\n                        if (data == undefined || data == null) {\n                            alert(\n                                '이메일은 필수정보입니다. 정보제공을 동의해주세요.'\n                            );\n                            /* 사용자 정보 재동의를 위하여 다시 네아로 동의페이지로 이동함 */\n                            naverLogin.reprompt();\n                            return;\n                        }\n                        axios\n                            .post('/api/callback/naver', { data: data })\n                            .then((res) => {\n                                if (res.status === 200) {\n                                    console.log('success');\n                                } else {\n                                    console.log('not error but problem');\n                                }\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                            });\n                        // window.location.replace(\"http://localhost:3000\");\n                    } else {\n                        console.log('callback 처리에 실패하였습니다.');\n                    }\n                });\n            });\n        } else val = true;\n    });\n\n    return <div onClick={()=>alert(\"Asd\")}></div>;\n}\n\nexport default NaverLogin;\n","/Users/vctr/Desktop/login/client/src/component/microsoft/MicrosoftLogin.js",["156"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\nimport axios from 'axios';\n\nfunction MicrosoftLogin({ logo, clientId }) {\n    const [scope, setScope] = useState('user.read');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            redirect_uri: 'https://localhost:3000',\n            scope: scope,\n            response_type: 'token',\n        });\n        const popup = PopupWindow.open(\n            `https://login.microsoftonline.com/common/oauth2/v2.0/authorize?${search}`\n        );\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('code not found'));\n        } else {\n            // console.log(data);\n            axios\n                .post('/api/callback/microsoft', { data: data })\n                .then((res) => {\n                    if (res.status === 200) {\n                        console.log('success');\n                    } else {\n                        console.log('not error but problem');\n                    }\n                })\n                .catch((e) => {\n                    console.log(e);\n                });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default MicrosoftLogin;\n","/Users/vctr/Desktop/login/client/src/component/microsoft/PopupWindow.js",["157"],"import { toParams, toQuery } from '../../util/utils';\n\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n\n        this.window = window.open(url, '_blank');\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setTimeout(() => {\n                try {\n                    const popup = this.window;\n\n                    if (!popup || popup.closed !== false) {\n                        reject(new Error('The popup was closed'));\n                        this.close();\n\n                        return;\n                    }\n\n                    if (\n                        popup.location.href === this.url ||\n                        popup.location.pathname === 'blank'\n                    ) {\n                        return;\n                    }\n\n                    const params = toParams(\n                        popup.location.hash.replace(/^#/, '')\n                    );\n                    resolve(params);\n                    this.close();\n                } catch (error) {}\n            }, 1000);\n        });\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/linkedin/LinkedinLogin.js",["158"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\n\nfunction LinkedinLogin({ logo, clientId, redirect_uri }) {\n    const [scope, setScope] = useState('r_liteprofile%20r_emailaddress');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            redirect_uri: redirect_uri+\"/linkedin\",\n            scope: scope,\n            response_type: 'code',\n        });\n        const popup = PopupWindow.open(\n            `https://www.linkedin.com/oauth/v2/authorization?${search}`\n        );\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('code not found'));\n        } else {\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default LinkedinLogin;\n","/Users/vctr/Desktop/login/client/src/component/linkedin/PopupWindow.js",["159","160","161","162"],"import { toParams, toQuery } from '../../util/utils';\nlet check = false;\nclass PopupWindow {\n    constructor(url) {\n        this.url = url;\n    }\n\n    open() {\n        const { url } = this;\n        this.window = window.open(url);\n    }\n\n    close() {\n        this.cancel();\n        this.window.close();\n    }\n\n    poll() {\n        this.promise = new Promise((resolve, reject) => {\n            this._iid = window.setInterval(() => {\n                try {\n                    const popup = this.window;\n\n                    // if (!popup || popup.closed !== false) {\n                    //     reject(new Error('The popup was closed'));\n                    //     this.close();\n\n                    //     return;\n                    // }\n\n                    // if (\n                    //     popup.location.href === this.url ||\n                    //     popup.location.pathname === 'blank'\n                    // ) {\n                    //     return;\n                    // }\n                    // console.log(popup.location)\n                    // const params = toParams(\n                    //     popup.location.hash.replace(/^#/, '')\n                    // );\n                    check = true\n                    resolve();\n                    \n                    \n                } catch (error) {}\n            }, 1000);\n        })\n        // this.close();\n        // setInterval(()=>{if(check) this.close() },1000)\n        // setInterval(()=>console.log(check),1000)\n    }\n\n    cancel() {\n        if (this._iid) {\n            window.clearInterval(this._iid);\n            this._iid = null;\n        }\n    }\n\n    then(...args) {\n        return this.promise.then(...args);\n    }\n\n    catch(...args) {\n        return this.promise.then(...args);\n    }\n\n    static open(...args) {\n        const popup = new this(...args);\n        popup.open();\n        popup.poll();\n        // setInterval(() => {\n        //     if(check) this.close();\n        // },1000); \n        return popup;\n    }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/discord/DiscordLogin.js",["163"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\n\nfunction DiscordLogin({ logo, clientId, clientSecret, redirectUri }) {\n    const [scope, setScope] = useState('identify%20email');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n\n    const onClick = () => {\n        const search = toQuery({\n            response_type: 'code',\n            client_id: clientId,\n            scope: scope,\n            grant_type: 'authorization_code',\n            redirect_uri: redirectUri + '/discord',\n            prompt: 'consent',\n        });\n\n        const popup = PopupWindow.open(\n            `https://discord.com/api/oauth2/authorize?${search}`\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default DiscordLogin;\n","/Users/vctr/Desktop/login/client/src/component/discord/PopupWindow.js",["164"],"import { toParams, toQuery } from '../../util/utils'\n\nclass PopupWindow {\n  constructor(url) {\n    this.url = url;\n  }\n\n  open() {\n    const { url } = this;\n\n    this.window = window.open(url);\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  async poll() {\n    this.promise = new Promise((resolve, reject) => {\n      this._iid = window.setTimeout(() => {\n        try {\n          const popup = this.window;\n          \n          if (!popup || popup.closed !== false) {\n            reject(new Error('The popup was closed'));\n            this.close();\n            \n            return;\n          }\n\n          if (popup.location.href === this.url || popup.location.pathname === 'blank') {\n            return;\n          }\n\n          const params = toParams(popup.location.hash.replace(/^#/, ''));\n          resolve(params);\n          this.close();    \n        } catch (error) {\n        }\n      }, 1000);\n      // setTimeout(()=>this.close(), 1000);\n      \n    });\n  }\n\n  cancel() {\n    if (this._iid) {\n      window.clearInterval(this._iid);\n      this._iid = null;\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n    popup.open()\n    popup.poll();\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/twitch/TwitchLogin.js",["165"],"import React, { useEffect, useState } from 'react';\nimport PopupWindow from './PopupWindow';\nimport { toQuery } from '../../util/utils';\nimport axios from 'axios';\n\nfunction TwitchLogin({ logo, clientId, redirectUri }) {\n    const [scope, setScope] = useState('user:edit%20user:read:email');\n\n    useEffect(() => {\n        setScope(scope);\n    }, []);\n    const onClick = () => {\n        const search = toQuery({\n            client_id: clientId,\n            redirect_uri: 'https://localhost:3000',\n            response_type: 'token',\n            scope: scope,\n        });\n\n        const popup = PopupWindow.open(\n            `https://id.twitch.tv/oauth2/authorize?${search}`\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n            axios\n                .post('/api/callback/twitch', { data: data })\n                .then((res) => {\n                    if (res.status === 200) {\n                        console.log('success');\n                    } else {\n                        console.log('not error but problem');\n                    }\n                })\n                .catch((e) => {\n                    console.log(e);\n                });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n\n    return <img onClick={onClick} className=\"Image\" src={logo} alt=\"logo\" />;\n}\nexport default TwitchLogin;\n","/Users/vctr/Desktop/login/client/src/component/twitch/PopupWindow.js",["166"],"import { toParams, toQuery } from '../../util/utils'\n\nclass PopupWindow {\n  constructor(url) {\n    this.url = url;\n  }\n\n  open() {\n    const { url } = this;\n\n    this.window = window.open(url);\n  }\n\n  close() {\n    this.cancel();\n    this.window.close();\n  }\n\n  async poll() {\n    this.promise = new Promise((resolve, reject) => {\n      this._iid = window.setTimeout(() => {\n        try {\n          const popup = this.window;\n          \n          if (!popup || popup.closed !== false) {\n            reject(new Error('The popup was closed'));\n            this.close();\n            \n            return;\n          }\n\n          if (popup.location.href === this.url || popup.location.pathname === 'blank') {\n            return;\n          }\n\n          const params = toParams(popup.location.hash.replace(/^#/, ''));\n          resolve(params);\n          this.close();    \n        } catch (error) {\n        }\n      }, 1000);\n    });\n  }\n\n  cancel() {\n    if (this._iid) {\n      window.clearInterval(this._iid);\n      this._iid = null;\n    }\n  }\n\n  then(...args) {\n    return this.promise.then(...args);\n  }\n\n  catch(...args) {\n    return this.promise.then(...args);\n  }\n\n  static open(...args) {\n    const popup = new this(...args);\n    popup.open()\n    popup.poll();\n    return popup;\n  }\n}\n\nexport default PopupWindow;\n","/Users/vctr/Desktop/login/client/src/component/line/LineLogin.js",["167","168","169","170"],"import React, { useEffect } from 'react';\nimport PopupWindow from './PopupWindow';\nimport axios from 'axios';\nimport url from 'url';\nimport qs from 'qs';\nimport querystring from 'querystring';\nimport jwt from 'jsonwebtoken';\nimport { toQuery } from '../../util/utils';\n\n\nconst maxAge = 120;\n\nfunction LineLogin({ clientID, redirectURI, logo, state, nonce, clientSecret, setPayload, setIdToken }) {\n    const onClick = () => {\n        const search = toQuery({\n            response_type: 'code',\n            client_id: clientID,\n            redirect_uri: redirectURI + '/line',\n            state: '12345abcde',\n            scope: 'profile%20openid%20email',\n            prompt: 'consent',\n            max_age: maxAge,\n        });\n\n        const popup = PopupWindow.open(\n            `https://access.line.me/oauth2/v2.1/authorize?${search}`\n        );\n\n        popup.then(\n            (data) => onSuccess(data),\n            (error) => onFailure(error)\n        );\n    };\n\n    const onSuccess = (data) => {\n        if (!data) {\n            onFailure(new Error('accessToken not found'));\n        } else {\n            console.log('get accessToken');\n            console.log(data);\n            // axios\n            //     .post('/api/callback/line', { data: data })\n            //     .then((res) => {\n            //         if (res.status === 200) {\n            //             console.log('success');\n            //         } else {\n            //             console.log('not error but problem');\n            //         }\n            //     })\n            //     .catch((e) => {\n            //         console.log(e);\n            //     });\n        }\n    };\n\n    const onFailure = (error) => {\n        console.error(error);\n    };\n    const lineLogin = () => {\n        // Build query string.\n        \n        const query = querystring.stringify({\n            response_type: 'code',\n            client_id: clientID,\n            state: state,\n            scope: 'profile%20openid%20email',\n            nonce: nonce,\n            prompt: 'consent',\n            max_age: maxAge,\n            bot_prompt: 'normal',\n        });\n        // Build the Line authorise URL.\n        const lineAuthoriseURL =\n            'https://access.line.me/oauth2/v2.1/authorize?' +\n            query +\n            '&redirect_uri=' +\n            redirectURI;\n        // Redirect to external URL.\n        window.location.href = lineAuthoriseURL;\n    };\n\n    const getAccessToken = (callbackURL) => {\n        var urlParts = url.parse(callbackURL, true);\n        var query = urlParts.query;\n        var hasCodeProperty = Object.prototype.hasOwnProperty.call(\n            query,\n            'code'\n        );\n        if (hasCodeProperty) {\n            const reqBody = {\n                grant_type: 'authorization_code',\n                code: query.code,\n                redirect_uri: redirectURI,\n                client_id: clientID,\n                client_secret: clientSecret,\n            };\n            const reqConfig = {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n            };\n\n            axios\n                .post(\n                    'https://api.line.me/oauth2/v2.1/token',\n                    qs.stringify(reqBody),\n                    reqConfig\n                )\n                .then((res) => {\n                    if (setPayload) setPayload(res.data);\n\n                    try {\n                        const decodedIdToken = jwt.verify(\n                            res.data.id_token,\n                            clientSecret,\n                            {\n                                algorithms: ['HS256'],\n                                audience: clientID.toString(),\n                                issuer: 'https://access.line.me',\n                                nonce: nonce,\n                            }\n                        );\n\n                        if (setIdToken) setIdToken(decodedIdToken);\n                    } catch (err) {\n                        // If token is invalid.\n                        console.log(err);\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    };\n\n    // useEffect(() => {\n    //     getAccessToken(window.location.href);\n    // }, [clientID]);\n\n    return (\n        <img src={logo} onClick={onClick} className=\"Image\" />\n        // <div className={styles.App}>\n        //     <div onClick={() => lineLogin()} className={styles.lineButton} />\n        // </div>\n    );\n}\nexport default LineLogin;\n","/Users/vctr/Desktop/login/client/src/component/line/PopupWindow.js",["171"],"/Users/vctr/Desktop/login/client/src/component/vkontakte/VkontakteLogin.js",["172"],"/Users/vctr/Desktop/login/client/src/component/vkontakte/PopupWindow.js",["173"],"/Users/vctr/Desktop/login/client/src/component/dropbox/DropboxLogin.js",["174","175"],"/Users/vctr/Desktop/login/client/src/component/dropbox/PopupWindow.js",["176"],"/Users/vctr/Desktop/login/client/src/component/yahoo/YahooLogin.js",["177","178"],"/Users/vctr/Desktop/login/client/src/component/yahoo/PopupWindow.js",["179"],"/Users/vctr/Desktop/login/client/src/component/slack/SlackLogin.js",["180","181"],"/Users/vctr/Desktop/login/client/src/component/slack/PopupWindow.js",["182"],"/Users/vctr/Desktop/login/client/src/component/reddit/RedditLogin.js",["183","184"],"/Users/vctr/Desktop/login/client/src/component/reddit/PopupWindow.js",["185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":9,"column":5,"nodeType":"192","endLine":9,"endColumn":14,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"194","line":10,"column":8,"nodeType":"195","endLine":10,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":13,"column":15,"nodeType":"192","messageId":"199","endLine":13,"endColumn":21},{"ruleId":"197","severity":1,"message":"200","line":3,"column":13,"nodeType":"192","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"197","severity":1,"message":"201","line":15,"column":10,"nodeType":"192","messageId":"199","endLine":15,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":31,"column":34,"nodeType":"204","messageId":"205","endLine":31,"endColumn":36},{"ruleId":"190","severity":1,"message":"194","line":11,"column":8,"nodeType":"195","endLine":11,"endColumn":10,"suggestions":"206"},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"190","severity":1,"message":"194","line":10,"column":8,"nodeType":"195","endLine":10,"endColumn":10,"suggestions":"208"},{"ruleId":"197","severity":1,"message":"209","line":1,"column":10,"nodeType":"192","messageId":"199","endLine":1,"endColumn":18},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"210","line":22,"column":27,"nodeType":"192","messageId":"199","endLine":22,"endColumn":32},{"ruleId":"197","severity":1,"message":"211","line":41,"column":21,"nodeType":"192","messageId":"199","endLine":41,"endColumn":26},{"ruleId":"190","severity":1,"message":"194","line":10,"column":8,"nodeType":"195","endLine":10,"endColumn":10,"suggestions":"212"},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"190","severity":1,"message":"194","line":11,"column":8,"nodeType":"195","endLine":11,"endColumn":10,"suggestions":"213"},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"214","line":1,"column":17,"nodeType":"192","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"215","line":59,"column":11,"nodeType":"192","messageId":"199","endLine":59,"endColumn":20},{"ruleId":"197","severity":1,"message":"216","line":82,"column":11,"nodeType":"192","messageId":"199","endLine":82,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":141,"column":9,"nodeType":"219","endLine":141,"endColumn":63},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"190","severity":1,"message":"194","line":10,"column":8,"nodeType":"195","endLine":10,"endColumn":10,"suggestions":"220"},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"214","line":1,"column":17,"nodeType":"192","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"221","line":1,"column":28,"nodeType":"192","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"214","line":1,"column":17,"nodeType":"192","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"221","line":1,"column":28,"nodeType":"192","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"214","line":1,"column":17,"nodeType":"192","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"221","line":1,"column":28,"nodeType":"192","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},{"ruleId":"197","severity":1,"message":"214","line":1,"column":17,"nodeType":"192","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"221","line":1,"column":28,"nodeType":"192","messageId":"199","endLine":1,"endColumn":36},{"ruleId":"197","severity":1,"message":"207","line":1,"column":20,"nodeType":"192","messageId":"199","endLine":1,"endColumn":27},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setScope'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scope] as a second argument to the useEffect Hook.","Identifier",["224"],"React Hook useEffect has a missing dependency: 'scope'. Either include it or remove the dependency array. You can also do a functional update 'setScope(s => ...)' if you only need 'scope' in the 'setScope' call.","ArrayExpression",["225"],"no-unused-vars","'search' is assigned a value but never used.","unusedVar","'config' is defined but never used.","'sendData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["226"],"'toQuery' is defined but never used.",["227"],"'toParams' is defined but never used.","'popup' is assigned a value but never used.","'check' is assigned a value but never used.",["228"],["229"],"'useEffect' is defined but never used.","'lineLogin' is assigned a value but never used.","'getAccessToken' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["230"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"233","fix":"235"},{"desc":"233","fix":"236"},{"desc":"233","fix":"237"},{"desc":"233","fix":"238"},{"desc":"233","fix":"239"},"Add dependencies array: [scope]",{"range":"240","text":"241"},"Update the dependencies array to be: [scope]",{"range":"242","text":"243"},{"range":"244","text":"243"},{"range":"245","text":"243"},{"range":"246","text":"243"},{"range":"247","text":"243"},{"range":"248","text":"243"},[310,310],", [scope]",[296,298],"[scope]",[319,321],[326,328],[324,326],[347,349],[300,302]]